{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JC\\\\Documents\\\\WebDevelopment\\\\portfolio\\\\src\\\\Components\\\\Assets\\\\Review.js\",\n  _s = $RefreshSig$();\n// import React, { useRef, useState } from \"react\";\n\n// export default function Review(props) {\n//   const [image, setImage] = useState(null);\n\n//   const RevNameRef = useRef(null);\n//   const RevOccRef = useRef(null);\n//   const RevEmailRef = useRef(null);\n//   const RevMsgRef = useRef(null);\n//   const RevSubmitBtnBoxRef = useRef(null);\n//   const handleImageChange = (event) => {\n//     setImage(event.target.files[0]);\n//   };\n//   async function HandleReview(e) {\n//     e.preventDefault();\n//     if (localStorage.getItem(\"token\") == undefined) {\n//       props.ShowToast(\n//         \"fa-xmark-circle ired\",\n//         \"Login Reguired\",\n//         \"Login your account, Now you can write a reviews or testemonials\"\n//       );\n//     } else {\n//       if (\n//         RevNameRef.current.value != \"\" &&\n//         RevEmailRef.current.value != \"\" &&\n//         RevMsgRef.current.value != \"\"\n//       ) {\n//         const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n//         let CheckEmail = emailRegex.test(RevEmailRef.current.value);\n//         if (RevNameRef.current.length <= 100) {\n//           props.ShowToast(\"fa-xmark-circle ired\", \"Maximum 100 Words Required\");\n//         } else if (!CheckEmail) {\n//           props.ShowToast(\"fa-xmark-circle ired\", \"Invalid Email Address\");\n//         } else if (RevMsgRef.current.value <= 250) {\n//           props.ShowToast(\"fa-xmark-circle ired\", \"Maximum 250 Words Required\");\n//         } else {\n//           const ReviewData = new FormData();\n//           ReviewData.append(\"name\", RevNameRef.current.value);\n//           ReviewData.append(\"email\", RevEmailRef.current.value);\n//           ReviewData.append(\"occupation\", RevOccRef.current.value);\n//           ReviewData.append(\"msg\", RevMsgRef.current.value);\n//           ReviewData.append(\"image\", image);\n//           try {\n//             await fetch(\"http://localhost:8000/api/review\", {\n//               method: \"POST\",\n//               headers: {\n//                 \"Content-Type\":\n//                   \"multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW\",\n//                 Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n//               },\n\n//               body: ReviewData,\n//             })\n//               .then((Response) => {\n//                 return Response.json();\n//               })\n//               .then((data) => {\n//                 console.log(data);\n//               });\n//           } catch (e) {\n//             console.log(e);\n//           }\n//         }\n//       } else {\n//         props.ShowToast(\n//           \"fa-xmark-circle ired\",\n//           \"Empty Fields\",\n//           \"Anyone field a empty plase filled it first.\"\n//         );\n//       }\n//     }\n//   }\n//   return (\n//     <div\n//       style={{ display: props.IsActive ? \"flex\" : \"none\" }}\n//       className=\"contact-box review-box\"\n//     >\n//       <div className=\"review-contact-head\">\n//         <h1>Write a Review</h1>\n//         <p>\n//           Lorem, ipsum dolor sit amet consectetur adipisicing elit. Maiores,\n//           iusto?\n//         </p>\n//       </div>\n//       <form method=\"post\" onSubmit={HandleReview} encType=\"multipart/form-data\">\n//         <div className=\"input-grid\">\n//           <div className=\"input-box\">\n//             <label htmlFor=\"name\">Full Name</label>\n//             <input type=\"text\" ref={RevNameRef} id=\"name\" />\n//           </div>\n//           <div className=\"input-box\">\n//             <label htmlFor=\"occupation\">\n//               Occupation <small>(Optional)</small>\n//             </label>\n//             <input type=\"text\" ref={RevOccRef} id=\"occupation\" />\n//           </div>\n//         </div>\n//         <div className=\"input-box\">\n//           <label htmlFor=\"email\">Email Address</label>\n//           <input type=\"email\" ref={RevEmailRef} id=\"email\" />\n//         </div>\n//         <div className=\"input-box\">\n//           <label htmlFor=\"review\">Write a Review</label>\n//           <textarea\n//             name=\"\"\n//             id=\"review\"\n//             ref={RevMsgRef}\n//             cols=\"30\"\n//             rows=\"5\"\n//           ></textarea>\n//         </div>\n//         <div className=\"input-button\">\n//           <input\n//             onChange={handleImageChange}\n//             type=\"file\"\n//             id=\"image\"\n//             style={{ display: \"none\" }}\n//           />\n//           <label htmlFor=\"image\" className=\"reviewer-image\">\n//             <i className=\"fa-regular fa-camera\"></i>\n//           </label>\n//           <button ref={RevSubmitBtnBoxRef}>Send Review</button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\nimport React, { useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Review(props) {\n  _s();\n  const [image, setImage] = useState(null);\n  const RevNameRef = useRef(null);\n  const RevOccRef = useRef(null);\n  const RevEmailRef = useRef(null);\n  const RevMsgRef = useRef(null);\n  const RevSubmitBtnBoxRef = useRef(null);\n  const handleImageChange = event => {\n    setImage(event.target.files[0]);\n  };\n  async function HandleReview(e) {\n    e.preventDefault();\n    RevSubmitBtnBoxRef.current.innerHTML = \"<i class='fa-regular fa-sync fa-spin'></i>\";\n    if (localStorage.getItem(\"token\") === undefined) {\n      props.ShowToast(\"fa-xmark-circle ired\", \"Login Required\", \"Login to your account to write reviews or testimonials.\");\n      return;\n    }\n    if (RevNameRef.current.value === \"\" || RevEmailRef.current.value === \"\" || RevMsgRef.current.value === \"\") {\n      props.ShowToast(\"fa-xmark-circle ired\", \"Empty Fields\", \"Please fill in all the required fields.\");\n      return;\n    }\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const isValidEmail = emailRegex.test(RevEmailRef.current.value);\n    if (RevNameRef.current.value.length > 100) {\n      props.ShowToast(\"fa-xmark-circle ired\", \"Maximum 100 Words Required\");\n      return;\n    }\n    if (!isValidEmail) {\n      props.ShowToast(\"fa-xmark-circle ired\", \"Invalid Email Address\");\n      return;\n    }\n    if (RevMsgRef.current.value.length > 250) {\n      props.ShowToast(\"fa-xmark-circle ired\", \"Maximum 250 Words Required\");\n      return;\n    }\n    const ReviewData = new FormData();\n    ReviewData.append(\"name\", RevNameRef.current.value);\n    ReviewData.append(\"email\", RevEmailRef.current.value);\n    ReviewData.append(\"occupation\", RevOccRef.current.value);\n    ReviewData.append(\"msg\", RevMsgRef.current.value);\n    // const ReviewData = {\n    //   \"name\": RevNameRef.current.value,\n    //   \"email\": RevEmailRef.current.value,\n    //   \"msg\": RevMsgRef.current.value,\n    // };\n\n    if (RevOccRef.current.value) {\n      ReviewData.occupation = RevOccRef.current.value;\n    }\n    if (image) {\n      ReviewData.append(\"image\", image);\n    }\n    try {\n      await fetch(\"http://localhost:8000/api/review\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify(ReviewData)\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        console.log(data);\n        if (!data.success) {\n          props.ShowToast(\"fa-xmark-circle ired\", data.msg);\n        } else {\n          props.ShowToast(\"fa-check-circle igreen\", data.msg);\n        }\n      });\n    } catch (error) {\n      console.log(\"Error creating review:\", error);\n    }\n    RevSubmitBtnBoxRef.current.innerHTML = \"Send Review\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: props.IsActive ? \"flex\" : \"none\"\n    },\n    className: \"contact-box review-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-contact-head\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Write a Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Maiores, iusto?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      encType: \"multipart/from-data\",\n      onSubmit: HandleReview,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: RevNameRef,\n            id: \"name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"occupation\",\n            children: [\"Occupation \", /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"(Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: RevOccRef,\n            id: \"occupation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          ref: RevEmailRef,\n          id: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"review\",\n          children: \"Write a Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"review\",\n          ref: RevMsgRef,\n          cols: \"30\",\n          rows: \"5\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleImageChange,\n          type: \"file\",\n          id: \"image\",\n          name: \"image\",\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          className: \"reviewer-image\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-regular fa-camera\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: RevSubmitBtnBoxRef,\n          children: \"Send Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n}\n_s(Review, \"8zEfAOEv24fYfqE0svH05VVl2+M=\");\n_c = Review;\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["React","useRef","useState","axios","jsxDEV","_jsxDEV","Review","props","_s","image","setImage","RevNameRef","RevOccRef","RevEmailRef","RevMsgRef","RevSubmitBtnBoxRef","handleImageChange","event","target","files","HandleReview","e","preventDefault","current","innerHTML","localStorage","getItem","undefined","ShowToast","value","emailRegex","isValidEmail","test","length","ReviewData","FormData","append","occupation","fetch","method","headers","Authorization","body","JSON","stringify","then","response","json","data","console","log","success","msg","error","style","display","IsActive","className","children","fileName","_jsxFileName","lineNumber","columnNumber","encType","onSubmit","htmlFor","type","ref","id","required","cols","rows","onChange","name","_c","$RefreshReg$"],"sources":["C:/Users/JC/Documents/WebDevelopment/portfolio/src/Components/Assets/Review.js"],"sourcesContent":["// import React, { useRef, useState } from \"react\";\r\n\r\n// export default function Review(props) {\r\n//   const [image, setImage] = useState(null);\r\n\r\n//   const RevNameRef = useRef(null);\r\n//   const RevOccRef = useRef(null);\r\n//   const RevEmailRef = useRef(null);\r\n//   const RevMsgRef = useRef(null);\r\n//   const RevSubmitBtnBoxRef = useRef(null);\r\n//   const handleImageChange = (event) => {\r\n//     setImage(event.target.files[0]);\r\n//   };\r\n//   async function HandleReview(e) {\r\n//     e.preventDefault();\r\n//     if (localStorage.getItem(\"token\") == undefined) {\r\n//       props.ShowToast(\r\n//         \"fa-xmark-circle ired\",\r\n//         \"Login Reguired\",\r\n//         \"Login your account, Now you can write a reviews or testemonials\"\r\n//       );\r\n//     } else {\r\n//       if (\r\n//         RevNameRef.current.value != \"\" &&\r\n//         RevEmailRef.current.value != \"\" &&\r\n//         RevMsgRef.current.value != \"\"\r\n//       ) {\r\n//         const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n//         let CheckEmail = emailRegex.test(RevEmailRef.current.value);\r\n//         if (RevNameRef.current.length <= 100) {\r\n//           props.ShowToast(\"fa-xmark-circle ired\", \"Maximum 100 Words Required\");\r\n//         } else if (!CheckEmail) {\r\n//           props.ShowToast(\"fa-xmark-circle ired\", \"Invalid Email Address\");\r\n//         } else if (RevMsgRef.current.value <= 250) {\r\n//           props.ShowToast(\"fa-xmark-circle ired\", \"Maximum 250 Words Required\");\r\n//         } else {\r\n//           const ReviewData = new FormData();\r\n//           ReviewData.append(\"name\", RevNameRef.current.value);\r\n//           ReviewData.append(\"email\", RevEmailRef.current.value);\r\n//           ReviewData.append(\"occupation\", RevOccRef.current.value);\r\n//           ReviewData.append(\"msg\", RevMsgRef.current.value);\r\n//           ReviewData.append(\"image\", image);\r\n//           try {\r\n//             await fetch(\"http://localhost:8000/api/review\", {\r\n//               method: \"POST\",\r\n//               headers: {\r\n//                 \"Content-Type\":\r\n//                   \"multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW\",\r\n//                 Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n//               },\r\n\r\n//               body: ReviewData,\r\n//             })\r\n//               .then((Response) => {\r\n//                 return Response.json();\r\n//               })\r\n//               .then((data) => {\r\n//                 console.log(data);\r\n//               });\r\n//           } catch (e) {\r\n//             console.log(e);\r\n//           }\r\n//         }\r\n//       } else {\r\n//         props.ShowToast(\r\n//           \"fa-xmark-circle ired\",\r\n//           \"Empty Fields\",\r\n//           \"Anyone field a empty plase filled it first.\"\r\n//         );\r\n//       }\r\n//     }\r\n//   }\r\n//   return (\r\n//     <div\r\n//       style={{ display: props.IsActive ? \"flex\" : \"none\" }}\r\n//       className=\"contact-box review-box\"\r\n//     >\r\n//       <div className=\"review-contact-head\">\r\n//         <h1>Write a Review</h1>\r\n//         <p>\r\n//           Lorem, ipsum dolor sit amet consectetur adipisicing elit. Maiores,\r\n//           iusto?\r\n//         </p>\r\n//       </div>\r\n//       <form method=\"post\" onSubmit={HandleReview} encType=\"multipart/form-data\">\r\n//         <div className=\"input-grid\">\r\n//           <div className=\"input-box\">\r\n//             <label htmlFor=\"name\">Full Name</label>\r\n//             <input type=\"text\" ref={RevNameRef} id=\"name\" />\r\n//           </div>\r\n//           <div className=\"input-box\">\r\n//             <label htmlFor=\"occupation\">\r\n//               Occupation <small>(Optional)</small>\r\n//             </label>\r\n//             <input type=\"text\" ref={RevOccRef} id=\"occupation\" />\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"input-box\">\r\n//           <label htmlFor=\"email\">Email Address</label>\r\n//           <input type=\"email\" ref={RevEmailRef} id=\"email\" />\r\n//         </div>\r\n//         <div className=\"input-box\">\r\n//           <label htmlFor=\"review\">Write a Review</label>\r\n//           <textarea\r\n//             name=\"\"\r\n//             id=\"review\"\r\n//             ref={RevMsgRef}\r\n//             cols=\"30\"\r\n//             rows=\"5\"\r\n//           ></textarea>\r\n//         </div>\r\n//         <div className=\"input-button\">\r\n//           <input\r\n//             onChange={handleImageChange}\r\n//             type=\"file\"\r\n//             id=\"image\"\r\n//             style={{ display: \"none\" }}\r\n//           />\r\n//           <label htmlFor=\"image\" className=\"reviewer-image\">\r\n//             <i className=\"fa-regular fa-camera\"></i>\r\n//           </label>\r\n//           <button ref={RevSubmitBtnBoxRef}>Send Review</button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\nimport React, { useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\nexport default function Review(props) {\r\n  const [image, setImage] = useState(null);\r\n\r\n  const RevNameRef = useRef(null);\r\n  const RevOccRef = useRef(null);\r\n  const RevEmailRef = useRef(null);\r\n  const RevMsgRef = useRef(null);\r\n  const RevSubmitBtnBoxRef = useRef(null);\r\n\r\n  const handleImageChange = (event) => {\r\n    setImage(event.target.files[0]);\r\n  };\r\n\r\n  async function HandleReview(e) {\r\n    e.preventDefault();\r\n    RevSubmitBtnBoxRef.current.innerHTML =\r\n      \"<i class='fa-regular fa-sync fa-spin'></i>\";\r\n    if (localStorage.getItem(\"token\") === undefined) {\r\n      props.ShowToast(\r\n        \"fa-xmark-circle ired\",\r\n        \"Login Required\",\r\n        \"Login to your account to write reviews or testimonials.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (\r\n      RevNameRef.current.value === \"\" ||\r\n      RevEmailRef.current.value === \"\" ||\r\n      RevMsgRef.current.value === \"\"\r\n    ) {\r\n      props.ShowToast(\r\n        \"fa-xmark-circle ired\",\r\n        \"Empty Fields\",\r\n        \"Please fill in all the required fields.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const isValidEmail = emailRegex.test(RevEmailRef.current.value);\r\n\r\n    if (RevNameRef.current.value.length > 100) {\r\n      props.ShowToast(\"fa-xmark-circle ired\", \"Maximum 100 Words Required\");\r\n      return;\r\n    }\r\n\r\n    if (!isValidEmail) {\r\n      props.ShowToast(\"fa-xmark-circle ired\", \"Invalid Email Address\");\r\n      return;\r\n    }\r\n\r\n    if (RevMsgRef.current.value.length > 250) {\r\n      props.ShowToast(\"fa-xmark-circle ired\", \"Maximum 250 Words Required\");\r\n      return;\r\n    }\r\n\r\n    const ReviewData = new FormData();\r\n    ReviewData.append(\"name\", RevNameRef.current.value);\r\n    ReviewData.append(\"email\", RevEmailRef.current.value);\r\n    ReviewData.append(\"occupation\", RevOccRef.current.value);\r\n    ReviewData.append(\"msg\", RevMsgRef.current.value);\r\n    // const ReviewData = {\r\n    //   \"name\": RevNameRef.current.value,\r\n    //   \"email\": RevEmailRef.current.value,\r\n    //   \"msg\": RevMsgRef.current.value,\r\n    // };\r\n    \r\n    if (RevOccRef.current.value) {\r\n      ReviewData.occupation = RevOccRef.current.value;\r\n    }\r\n    \r\n    if (image) {\r\n      ReviewData.append(\"image\", image);\r\n    }\r\n    try {\r\n\r\n  await fetch(\"http://localhost:8000/api/review\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        body: JSON.stringify(ReviewData),\r\n      })\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          console.log(data);\r\n          if (!data.success) {\r\n            props.ShowToast(\"fa-xmark-circle ired\", data.msg);\r\n          } else {\r\n            props.ShowToast(\"fa-check-circle igreen\", data.msg);\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error creating review:\", error);\r\n    }\r\n    RevSubmitBtnBoxRef.current.innerHTML = \"Send Review\";\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{ display: props.IsActive ? \"flex\" : \"none\" }}\r\n      className=\"contact-box review-box\"\r\n    >\r\n      <div className=\"review-contact-head\">\r\n        <h1>Write a Review</h1>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Maiores,\r\n          iusto?\r\n        </p>\r\n      </div>\r\n      <form encType=\"multipart/from-data\" onSubmit={HandleReview}>\r\n        <div className=\"input-grid\">\r\n          <div className=\"input-box\">\r\n            <label htmlFor=\"name\">Full Name</label>\r\n            <input type=\"text\" ref={RevNameRef} id=\"name\" required />\r\n          </div>\r\n          <div className=\"input-box\">\r\n            <label htmlFor=\"occupation\">\r\n              Occupation <small>(Optional)</small>\r\n            </label>\r\n            <input type=\"text\" ref={RevOccRef} id=\"occupation\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"email\">Email Address</label>\r\n          <input type=\"email\" ref={RevEmailRef} id=\"email\" required />\r\n        </div>\r\n        <div className=\"input-box\">\r\n          <label htmlFor=\"review\">Write a Review</label>\r\n          <textarea\r\n            id=\"review\"\r\n            ref={RevMsgRef}\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            required\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"input-button\">\r\n          <input\r\n            onChange={handleImageChange}\r\n            type=\"file\"\r\n            id=\"image\"\r\n            name=\"image\"\r\n            style={{ display: \"none\" }}\r\n          />\r\n          <label htmlFor=\"image\" className=\"reviewer-image\">\r\n            <i className=\"fa-regular fa-camera\"></i>\r\n          </label>\r\n          <button ref={RevSubmitBtnBoxRef}>Send Review</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}