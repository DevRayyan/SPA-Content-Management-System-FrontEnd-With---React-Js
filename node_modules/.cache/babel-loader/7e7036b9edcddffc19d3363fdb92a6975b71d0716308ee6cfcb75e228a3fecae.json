{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JC\\\\Documents\\\\WebDevelopment\\\\portfolio\\\\src\\\\Components\\\\Private\\\\PrivateRoutes.js\";\n// import React, { useEffect } from \"react\";\n// import { Route, Link, Routes, Outlet, useNavigate } from \"react-router-dom\";\n\n//  const PrivateRoutes = (props) => {\n//    const Navigate = useNavigate();\n//    useEffect(()=>{\n//     if(!props.isAuth){\n//       Navigate(\"/login\")\n//     }\n//   },[])\n//   return props.isAuth && <Outlet />;\n// }\n// export default PrivateRoutes\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = _ref => {\n  let {\n    component: Component,\n    isAuthenticated,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 54\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Route","Redirect","jsxDEV","_jsxDEV","ProtectedRoute","_ref","component","Component","isAuthenticated","rest","render","props","fileName","_jsxFileName","lineNumber","columnNumber","to","pathname","_c","$RefreshReg$"],"sources":["C:/Users/JC/Documents/WebDevelopment/portfolio/src/Components/Private/PrivateRoutes.js"],"sourcesContent":["// import React, { useEffect } from \"react\";\r\n// import { Route, Link, Routes, Outlet, useNavigate } from \"react-router-dom\";\r\n\r\n//  const PrivateRoutes = (props) => {\r\n//    const Navigate = useNavigate();\r\n//    useEffect(()=>{\r\n//     if(!props.isAuth){\r\n//       Navigate(\"/login\")\r\n//     }\r\n//   },[])\r\n//   return props.isAuth && <Outlet />;\r\n// }\r\n// export default PrivateRoutes\r\nimport React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ component: Component, isAuthenticated, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to={{ pathname: '/login' }} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGC,IAAA,IAAwD;EAAA,IAAvD;IAAEC,SAAS,EAAEC,SAAS;IAAEC,eAAe;IAAE,GAAGC;EAAK,CAAC,GAAAJ,IAAA;EACxE,oBACEF,OAAA,CAACH,KAAK;IAAA,GACAS,IAAI;IACRC,MAAM,EAAEC,KAAK,IACXH,eAAe,gBAAGL,OAAA,CAACI,SAAS;MAAA,GAAKI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,gBAAGZ,OAAA,CAACF,QAAQ;MAACe,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAS;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACnF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEN,CAAC;AAACG,EAAA,GATId,cAAc;AAWpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}