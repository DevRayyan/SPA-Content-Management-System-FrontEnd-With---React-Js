{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JC\\\\Documents\\\\WebDevelopment\\\\portfolio\\\\src\\\\Components\\\\Registration\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport plane from \"../../images/plane.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPassword(props) {\n  _s();\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [ShowRePass, setShowRePass] = useState(false);\n  const [ShowNewPass, setShowNewPass] = useState(false);\n\n  //  input fields validate or not\n  const [NewPassVerify, setNewPassVerify] = useState(false);\n  const [RePassVerify, setRePassVerify] = useState(false);\n  const ResetPassFieldRef = useRef(null);\n  const RePassFieldRef = useRef(null);\n  const submitBtn = useRef(null);\n  const ResetPassBtnRef = useRef(null);\n  const NewPassErrRef = useRef(null);\n  const RePassErrRef = useRef(null);\n  useEffect(() => {\n    if (token.length >= 10) {\n      localStorage.setItem(\"reset_token\", token);\n      // document.write(token)\n    } else {\n      // document.write(token)\n      navigate(\"/login\");\n    }\n  }, []);\n  function HandlePassFields(e) {\n    let value = e.target.value;\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    let CheckPass = passwordRegex.test(value);\n    if (!CheckPass) {\n      NewPassErrRef.current.innerText = \"At least one lowercase, one uppercase letter, one digit, one special character (@, $, !, %, *, ?, &) And Minimum length of 8 characters\";\n      setNewPassVerify(false);\n    } else {\n      NewPassErrRef.current.innerText = null;\n      setNewPassVerify(true);\n    }\n  }\n  function HandleRePassFields(e) {\n    let value = e.target.value;\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    let CheckPass = passwordRegex.test(value);\n    if (!CheckPass) {\n      RePassErrRef.current.innerText = \"At least one lowercase, one uppercase letter, one digit, one special character (@, $, !, %, *, ?, &) And Minimum length of 8 characters\";\n      setRePassVerify(false);\n    } else {\n      RePassErrRef.current.innerText = null;\n      setRePassVerify(true);\n    }\n  }\n  async function HandleResetPass(e) {\n    e.preventDefault();\n    if (NewPassVerify && RePassVerify) {\n      if (ResetPassFieldRef.current.value != RePassFieldRef.current.value) {\n        return props.ShowToast(\"fa-xmark-circle ired\", \"Error\", \"Password fields does not matched.\");\n      } else {\n        ResetPassBtnRef.current.innerHTML = \"<i class='fa-light fa-sync fa-spin'></i>\";\n        submitBtn.current.style.width = \"15%\";\n        await fetch(`http://localhost:8000/api/reset/${token}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            password: ResetPassFieldRef.current.value\n          })\n        }).then(Response => {\n          return Response.json();\n        }).then(Res => {\n          console.log(Res);\n          submitBtn.current.style.width = \"50%\";\n          if (Res.msg) {\n            ResetPassBtnRef.current.innerHTML = \"Reset Password\";\n            props.ShowToast(\"fa-xmark-circle ired\", \"Request Expired\", \"Reset password link Expired.\");\n          } else {\n            ResetPassBtnRef.current.innerHTML = \"Password Reset <i class='fa-solid fa-check-circle'></i>\";\n            props.ShowToast(\"fa-check-circle igreen\", \"Password Successfully Reset\", \"Your password successfully reset, Now go to login with new password\");\n          }\n        }).catch(e => {\n          console.log(e);\n        });\n      }\n    } else {\n      props.ShowToast(\"fa-xmark-circle ired\", \"Error\", \"Password fields are not Validate.\");\n    }\n\n    // VerifyEmailForPassRef.current.innerHTML = \"<i class='fa-light fa-sync fa-spin'></i>\"\n    // await fetch(`http://localhost:8000/api/reset-password`, {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({ email: ResetPassFieldRef.current.value }),\n    // })\n    //   .then((Response) => {\n    //     return Response.json()\n    // }).then((Res)=>{\n\n    //   console.log(Res);\n    //   VerifyEmailForPassRef.current.innerHTML = \"Reset Link Sended <i class='fa-solid fa-check-circle'></i>\"\n\n    // props.ShowToast(\n    //       \"fa-check-circle igreen\",\n    //       \"Password reset link sended on your email address\"\n    //     );\n\n    //   })\n    //   .catch((e)=>{\n    //     console.log(e)\n    //   })\n  }\n\n  function NewPasswordToggler() {\n    setShowNewPass(!ShowNewPass);\n  }\n  function RePasswordToggler() {\n    setShowRePass(!ShowRePass);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-pass-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset-pass-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reset-pass-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: plane,\n            loading: \"lazy\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"\",\n          children: \"Reset a New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please enter your email address below to recieve your user and a new password.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        onSubmit: HandleResetPass,\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"new_pass\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: HandlePassFields,\n            ref: ResetPassFieldRef,\n            type: ShowNewPass ? \"text\" : \"password\",\n            id: \"new_pass\",\n            name: \"new_pass\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            ref: NewPassErrRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: NewPasswordToggler,\n            className: `${ShowNewPass ? \"\" : \"hidepass\"} showpass`,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: `fa-solid fa-eye${ShowNewPass ? \"\" : \"-slash\"} `\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"new_re_pass\",\n            children: \"Repeat Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: HandleRePassFields,\n            ref: RePassFieldRef,\n            type: ShowRePass ? \"text\" : \"password\",\n            id: \"new_re_pass\",\n            name: \"new_re_pass\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            ref: RePassErrRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: RePasswordToggler,\n            className: `${ShowRePass ? \"\" : \"hidepass\"} showpass`,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: `fa-solid fa-eye${ShowRePass ? \"\" : \"-slash\"} `\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: submitBtn,\n          className: \"submit-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            ref: ResetPassBtnRef,\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this)\n  // <div>{token}</div>\n  ;\n}\n_s(ResetPassword, \"EqEwUoPmHWTAM5C8bkcPjf1wveU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useNavigate","useParams","plane","jsxDEV","_jsxDEV","ResetPassword","props","_s","token","navigate","ShowRePass","setShowRePass","ShowNewPass","setShowNewPass","NewPassVerify","setNewPassVerify","RePassVerify","setRePassVerify","ResetPassFieldRef","RePassFieldRef","submitBtn","ResetPassBtnRef","NewPassErrRef","RePassErrRef","length","localStorage","setItem","HandlePassFields","e","value","target","passwordRegex","CheckPass","test","current","innerText","HandleRePassFields","HandleResetPass","preventDefault","ShowToast","innerHTML","style","width","fetch","method","headers","body","JSON","stringify","password","then","Response","json","Res","console","log","msg","catch","NewPasswordToggler","RePasswordToggler","className","children","src","loading","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","ref","type","id","name","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/JC/Documents/WebDevelopment/portfolio/src/Components/Registration/ResetPassword.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport plane from \"../../images/plane.png\";\r\nexport default function ResetPassword(props) {\r\n  const { token } = useParams();\r\n\r\n\r\n  const navigate = useNavigate();\r\n  \r\n  const [ShowRePass, setShowRePass] = useState(false);\r\n  const [ShowNewPass, setShowNewPass] = useState(false);\r\n\r\n  //  input fields validate or not\r\n  const [NewPassVerify, setNewPassVerify] = useState(false);\r\n  const [RePassVerify, setRePassVerify] = useState(false);\r\n  const ResetPassFieldRef = useRef(null);\r\n  const RePassFieldRef = useRef(null);\r\n  const submitBtn = useRef(null);\r\n  const ResetPassBtnRef = useRef(null);\r\n  const NewPassErrRef = useRef(null);\r\n  const RePassErrRef = useRef(null);\r\n  \r\n  useEffect(()=>{\r\n    if(token.length >=10){\r\n      localStorage.setItem(\"reset_token\",token);\r\n      // document.write(token)\r\n    }else{\r\n      // document.write(token)\r\n     navigate(\"/login\")\r\n    }\r\n  },[])\r\n  function HandlePassFields(e) {\r\n    let value = e.target.value;\r\n    const passwordRegex =\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n    let CheckPass = passwordRegex.test(value);\r\n\r\n    if (!CheckPass) {\r\n      NewPassErrRef.current.innerText =\r\n        \"At least one lowercase, one uppercase letter, one digit, one special character (@, $, !, %, *, ?, &) And Minimum length of 8 characters\";\r\n      setNewPassVerify(false);\r\n    } else {\r\n      NewPassErrRef.current.innerText = null;\r\n      setNewPassVerify(true);\r\n    }\r\n  }\r\n\r\n  function HandleRePassFields(e) {\r\n    let value = e.target.value;\r\n    const passwordRegex =\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n    let CheckPass = passwordRegex.test(value);\r\n\r\n    if (!CheckPass) {\r\n      RePassErrRef.current.innerText =\r\n        \"At least one lowercase, one uppercase letter, one digit, one special character (@, $, !, %, *, ?, &) And Minimum length of 8 characters\";\r\n        setRePassVerify(false);\r\n    } else {\r\n      RePassErrRef.current.innerText = null;\r\n      setRePassVerify(true);\r\n    }\r\n  }\r\n\r\n  async function HandleResetPass(e) {\r\n    e.preventDefault();\r\n    if (NewPassVerify && RePassVerify) {\r\n      if(ResetPassFieldRef.current.value != RePassFieldRef.current.value){\r\n       return props.ShowToast(\r\n          \"fa-xmark-circle ired\",\r\n          \"Error\",\r\n          \"Password fields does not matched.\"\r\n        );\r\n      }else{\r\n        ResetPassBtnRef.current.innerHTML = \"<i class='fa-light fa-sync fa-spin'></i>\"\r\n        submitBtn.current.style.width = \"15%\"\r\n          await fetch(`http://localhost:8000/api/reset/${token}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ password: ResetPassFieldRef.current.value }),\r\n    })\r\n      .then((Response) => {\r\n        return Response.json()\r\n      }).then((Res)=>{\r\n        console.log(Res);\r\n        submitBtn.current.style.width = \"50%\"\r\nif(Res.msg){\r\n  ResetPassBtnRef.current.innerHTML = \"Reset Password\"\r\n  props.ShowToast(\r\n    \"fa-xmark-circle ired\",\r\n    \"Request Expired\",\r\n    \"Reset password link Expired.\"\r\n  );\r\n\r\n}else{\r\n\r\n  ResetPassBtnRef.current.innerHTML = \"Password Reset <i class='fa-solid fa-check-circle'></i>\"\r\n\r\n      props.ShowToast(\r\n            \"fa-check-circle igreen\",\r\n            \"Password Successfully Reset\",\r\n            \"Your password successfully reset, Now go to login with new password\"\r\n            );\r\n          }\r\n\r\n      })\r\n      .catch((e)=>{\r\n        console.log(e)\r\n      })\r\n      }\r\n\r\n}else{\r\n  props.ShowToast(\r\n    \"fa-xmark-circle ired\",\r\n    \"Error\",\r\n    \"Password fields are not Validate.\"\r\n  );\r\n}\r\n\r\n    // VerifyEmailForPassRef.current.innerHTML = \"<i class='fa-light fa-sync fa-spin'></i>\"\r\n    // await fetch(`http://localhost:8000/api/reset-password`, {\r\n    //   method: \"POST\",\r\n    //   headers: {\r\n    //     \"Content-Type\": \"application/json\",\r\n    //   },\r\n    //   body: JSON.stringify({ email: ResetPassFieldRef.current.value }),\r\n    // })\r\n    //   .then((Response) => {\r\n    //     return Response.json()\r\n    // }).then((Res)=>{\r\n\r\n    //   console.log(Res);\r\n    //   VerifyEmailForPassRef.current.innerHTML = \"Reset Link Sended <i class='fa-solid fa-check-circle'></i>\"\r\n\r\n      // props.ShowToast(\r\n      //       \"fa-check-circle igreen\",\r\n      //       \"Password reset link sended on your email address\"\r\n      //     );\r\n\r\n    //   })\r\n    //   .catch((e)=>{\r\n    //     console.log(e)\r\n    //   })\r\n  }\r\n  function NewPasswordToggler() {\r\n    setShowNewPass(!ShowNewPass);\r\n  }\r\n  function RePasswordToggler() {\r\n    setShowRePass(!ShowRePass);\r\n  }\r\n  return (\r\n    <div className=\"reset-pass-wrapper\">\r\n      <div className=\"reset-pass-container\">\r\n        <div className=\"reset-pass-content\">\r\n          <div className=\"img\">\r\n            <img src={plane} loading=\"lazy\" alt=\"\" />\r\n          </div>\r\n          <h2 className=\"\">Reset a New Password</h2>\r\n          <p>\r\n            Please enter your email address below to recieve your user and a new\r\n            password.\r\n          </p>\r\n        </div>\r\n        <form method=\"post\" onSubmit={HandleResetPass} className=\"input-box\">\r\n          <div>\r\n            <label htmlFor=\"new_pass\">New Password</label>\r\n            <input\r\n              onChange={HandlePassFields}\r\n              ref={ResetPassFieldRef}\r\n              type={ShowNewPass ? \"text\" : \"password\"}\r\n              id=\"new_pass\"\r\n              name=\"new_pass\"\r\n              required\r\n            />\r\n            <p ref={NewPassErrRef}></p>\r\n            <span\r\n              onClick={NewPasswordToggler}\r\n              className={`${ShowNewPass ? \"\" : \"hidepass\"} showpass`}\r\n            >\r\n              <i\r\n                className={`fa-solid fa-eye${ShowNewPass ? \"\" : \"-slash\"} `}\r\n              ></i>\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"new_re_pass\">Repeat Password</label>\r\n            <input\r\n              onChange={HandleRePassFields}\r\n              ref={RePassFieldRef}\r\n              type={ShowRePass ? \"text\" : \"password\"}\r\n              id=\"new_re_pass\"\r\n              name=\"new_re_pass\"\r\n              required\r\n            />\r\n            <p ref={RePassErrRef}></p>\r\n            <span\r\n              onClick={RePasswordToggler}\r\n              className={`${ShowRePass ? \"\" : \"hidepass\"} showpass`}\r\n            >\r\n              <i\r\n                className={`fa-solid fa-eye${ShowRePass ? \"\" : \"-slash\"} `}\r\n              ></i>\r\n            </span>\r\n          </div>\r\n          <div ref={submitBtn} className=\"submit-btn\">\r\n            <button type=\"submit\" ref={ResetPassBtnRef}>\r\n              Reset Password\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    // <div>{token}</div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3C,eAAe,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3C,MAAM;IAAEC;EAAM,CAAC,GAAGP,SAAS,EAAE;EAG7B,MAAMQ,QAAQ,GAAGT,WAAW,EAAE;EAE9B,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMmB,iBAAiB,GAAGpB,MAAM,CAAC,IAAI,CAAC;EACtC,MAAMqB,cAAc,GAAGrB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMsB,SAAS,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMuB,eAAe,GAAGvB,MAAM,CAAC,IAAI,CAAC;EACpC,MAAMwB,aAAa,GAAGxB,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMyB,YAAY,GAAGzB,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAI;IACZ,IAAGW,KAAK,CAACgB,MAAM,IAAG,EAAE,EAAC;MACnBC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAClB,KAAK,CAAC;MACzC;IACF,CAAC,MAAI;MACH;MACDC,QAAQ,CAAC,QAAQ,CAAC;IACnB;EACF,CAAC,EAAC,EAAE,CAAC;EACL,SAASkB,gBAAgBA,CAACC,CAAC,EAAE;IAC3B,IAAIC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC1B,MAAME,aAAa,GACjB,sEAAsE;IACxE,IAAIC,SAAS,GAAGD,aAAa,CAACE,IAAI,CAACJ,KAAK,CAAC;IAEzC,IAAI,CAACG,SAAS,EAAE;MACdV,aAAa,CAACY,OAAO,CAACC,SAAS,GAC7B,yIAAyI;MAC3IpB,gBAAgB,CAAC,KAAK,CAAC;IACzB,CAAC,MAAM;MACLO,aAAa,CAACY,OAAO,CAACC,SAAS,GAAG,IAAI;MACtCpB,gBAAgB,CAAC,IAAI,CAAC;IACxB;EACF;EAEA,SAASqB,kBAAkBA,CAACR,CAAC,EAAE;IAC7B,IAAIC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC1B,MAAME,aAAa,GACjB,sEAAsE;IACxE,IAAIC,SAAS,GAAGD,aAAa,CAACE,IAAI,CAACJ,KAAK,CAAC;IAEzC,IAAI,CAACG,SAAS,EAAE;MACdT,YAAY,CAACW,OAAO,CAACC,SAAS,GAC5B,yIAAyI;MACzIlB,eAAe,CAAC,KAAK,CAAC;IAC1B,CAAC,MAAM;MACLM,YAAY,CAACW,OAAO,CAACC,SAAS,GAAG,IAAI;MACrClB,eAAe,CAAC,IAAI,CAAC;IACvB;EACF;EAEA,eAAeoB,eAAeA,CAACT,CAAC,EAAE;IAChCA,CAAC,CAACU,cAAc,EAAE;IAClB,IAAIxB,aAAa,IAAIE,YAAY,EAAE;MACjC,IAAGE,iBAAiB,CAACgB,OAAO,CAACL,KAAK,IAAIV,cAAc,CAACe,OAAO,CAACL,KAAK,EAAC;QAClE,OAAOvB,KAAK,CAACiC,SAAS,CACnB,sBAAsB,EACtB,OAAO,EACP,mCAAmC,CACpC;MACH,CAAC,MAAI;QACHlB,eAAe,CAACa,OAAO,CAACM,SAAS,GAAG,0CAA0C;QAC9EpB,SAAS,CAACc,OAAO,CAACO,KAAK,CAACC,KAAK,GAAG,KAAK;QACnC,MAAMC,KAAK,CAAE,mCAAkCnC,KAAM,EAAC,EAAE;UAC5DoC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,QAAQ,EAAE/B,iBAAiB,CAACgB,OAAO,CAACL;UAAM,CAAC;QACpE,CAAC,CAAC,CACCqB,IAAI,CAAEC,QAAQ,IAAK;UAClB,OAAOA,QAAQ,CAACC,IAAI,EAAE;QACxB,CAAC,CAAC,CAACF,IAAI,CAAEG,GAAG,IAAG;UACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;UAChBjC,SAAS,CAACc,OAAO,CAACO,KAAK,CAACC,KAAK,GAAG,KAAK;UAC7C,IAAGW,GAAG,CAACG,GAAG,EAAC;YACTnC,eAAe,CAACa,OAAO,CAACM,SAAS,GAAG,gBAAgB;YACpDlC,KAAK,CAACiC,SAAS,CACb,sBAAsB,EACtB,iBAAiB,EACjB,8BAA8B,CAC/B;UAEH,CAAC,MAAI;YAEHlB,eAAe,CAACa,OAAO,CAACM,SAAS,GAAG,yDAAyD;YAEzFlC,KAAK,CAACiC,SAAS,CACT,wBAAwB,EACxB,6BAA6B,EAC7B,qEAAqE,CACpE;UACH;QAEJ,CAAC,CAAC,CACDkB,KAAK,CAAE7B,CAAC,IAAG;UACV0B,OAAO,CAACC,GAAG,CAAC3B,CAAC,CAAC;QAChB,CAAC,CAAC;MACF;IAEN,CAAC,MAAI;MACHtB,KAAK,CAACiC,SAAS,CACb,sBAAsB,EACtB,OAAO,EACP,mCAAmC,CACpC;IACH;;IAEI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEE;IACA;IACA;IACA;;IAEF;IACA;IACA;IACA;EACF;;EACA,SAASmB,kBAAkBA,CAAA,EAAG;IAC5B7C,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B;EACA,SAAS+C,iBAAiBA,CAAA,EAAG;IAC3BhD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B;EACA,oBACEN,OAAA;IAAKwD,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eACjCzD,OAAA;MAAKwD,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCzD,OAAA;QAAKwD,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjCzD,OAAA;UAAKwD,SAAS,EAAC,KAAK;UAAAC,QAAA,eAClBzD,OAAA;YAAK0D,GAAG,EAAE5D,KAAM;YAAC6D,OAAO,EAAC,MAAM;YAACC,GAAG,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAG;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACrC,eACNhE,OAAA;UAAIwD,SAAS,EAAC,EAAE;UAAAC,QAAA,EAAC;QAAoB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC1ChE,OAAA;UAAAyD,QAAA,EAAG;QAGH;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACA,eACNhE,OAAA;QAAMwC,MAAM,EAAC,MAAM;QAACyB,QAAQ,EAAEhC,eAAgB;QAACuB,SAAS,EAAC,WAAW;QAAAC,QAAA,gBAClEzD,OAAA;UAAAyD,QAAA,gBACEzD,OAAA;YAAOkE,OAAO,EAAC,UAAU;YAAAT,QAAA,EAAC;UAAY;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eAC9ChE,OAAA;YACEmE,QAAQ,EAAE5C,gBAAiB;YAC3B6C,GAAG,EAAEtD,iBAAkB;YACvBuD,IAAI,EAAE7D,WAAW,GAAG,MAAM,GAAG,UAAW;YACxC8D,EAAE,EAAC,UAAU;YACbC,IAAI,EAAC,UAAU;YACfC,QAAQ;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACR,eACFhE,OAAA;YAAGoE,GAAG,EAAElD;UAAc;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eAC3BhE,OAAA;YACEyE,OAAO,EAAEnB,kBAAmB;YAC5BE,SAAS,EAAG,GAAEhD,WAAW,GAAG,EAAE,GAAG,UAAW,WAAW;YAAAiD,QAAA,eAEvDzD,OAAA;cACEwD,SAAS,EAAG,kBAAiBhD,WAAW,GAAG,EAAE,GAAG,QAAS;YAAG;cAAAqD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UACzD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACA;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACH,eACNhE,OAAA;UAAAyD,QAAA,gBACEzD,OAAA;YAAOkE,OAAO,EAAC,aAAa;YAAAT,QAAA,EAAC;UAAe;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eACpDhE,OAAA;YACEmE,QAAQ,EAAEnC,kBAAmB;YAC7BoC,GAAG,EAAErD,cAAe;YACpBsD,IAAI,EAAE/D,UAAU,GAAG,MAAM,GAAG,UAAW;YACvCgE,EAAE,EAAC,aAAa;YAChBC,IAAI,EAAC,aAAa;YAClBC,QAAQ;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACR,eACFhE,OAAA;YAAGoE,GAAG,EAAEjD;UAAa;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eAC1BhE,OAAA;YACEyE,OAAO,EAAElB,iBAAkB;YAC3BC,SAAS,EAAG,GAAElD,UAAU,GAAG,EAAE,GAAG,UAAW,WAAW;YAAAmD,QAAA,eAEtDzD,OAAA;cACEwD,SAAS,EAAG,kBAAiBlD,UAAU,GAAG,EAAE,GAAG,QAAS;YAAG;cAAAuD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UACxD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACA;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACH,eACNhE,OAAA;UAAKoE,GAAG,EAAEpD,SAAU;UAACwC,SAAS,EAAC,YAAY;UAAAC,QAAA,eACzCzD,OAAA;YAAQqE,IAAI,EAAC,QAAQ;YAACD,GAAG,EAAEnD,eAAgB;YAAAwC,QAAA,EAAC;UAE5C;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAS;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;EAER;EAAA;AAEJ;AAAC7D,EAAA,CApNuBF,aAAa;EAAA,QACjBJ,SAAS,EAGVD,WAAW;AAAA;AAAA8E,EAAA,GAJNzE,aAAa;AAAA,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}