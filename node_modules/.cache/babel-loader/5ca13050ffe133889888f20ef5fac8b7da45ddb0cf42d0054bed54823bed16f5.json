{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n// stripe\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport CheckoutForm from \"./CheckoutForm\";\nimport Plan from \"./Plan\";\nimport Loading from \"../Assets/Loader\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(\"pk_test_51NArHPDqLoKHNkLbeZepmk7Vx6XiF0tforDXSdzXJn8PKmNvOp5vUMDecIwSNVEpFKd4SSyrOfxlqkccsgRqgp5600SrJ9NF0g\");\nexport default function Subscription(props) {\n  _s();\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const [Isloading, setIsloading] = useState(false);\n  useEffect(() => {\n    setIsloading(true);\n    const items = {\n      price: 100\n    };\n    fetch(\"http://localhost:8000/api/create-payment-intent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(items)\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      data && setClientSecret(data.clientSecret);\n    }).catch(error => {\n      console.log(error);\n    });\n    // setIsloading(false);\n  }, []);\n  const appearance = {\n    theme: props.themeMode == \"dark\" ? \"night\" : \"stripe\"\n  };\n  const options = {\n    clientSecret,\n    appearance\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Subscription, \"fQCfCDHyIY3FigC83UWT2r5hS9I=\");\n_c = Subscription;\nvar _c;\n$RefreshReg$(_c, \"Subscription\");","map":{"version":3,"names":["React","useEffect","useState","loadStripe","Elements","CheckoutForm","Plan","Loading","Fragment","_Fragment","jsxDEV","_jsxDEV","stripePromise","Subscription","props","_s","clientSecret","setClientSecret","Isloading","setIsloading","items","price","fetch","method","headers","body","JSON","stringify","then","res","json","data","catch","error","console","log","appearance","theme","themeMode","options","_c","$RefreshReg$"],"sources":["C:/Users/JC/Documents/WebDevelopment/portfolio/src/Components/PaymentGatway/Subscription.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// stripe\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport CheckoutForm from \"./CheckoutForm\";\r\nimport Plan from \"./Plan\";\r\nimport Loading from \"../Assets/Loader\";\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51NArHPDqLoKHNkLbeZepmk7Vx6XiF0tforDXSdzXJn8PKmNvOp5vUMDecIwSNVEpFKd4SSyrOfxlqkccsgRqgp5600SrJ9NF0g\"\r\n);\r\nexport default function Subscription(props) {\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n  const [Isloading, setIsloading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsloading(true);\r\n    const items = { price: 100 };\r\n    \r\n  \r\n      fetch(\"http://localhost:8000/api/create-payment-intent\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(items),\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          data && setClientSecret(data.clientSecret);\r\n        })\r\n      .catch ((error)=>{\r\n        console.log(error);\r\n      })\r\n      // setIsloading(false);\r\n  }, []);\r\n\r\n  const appearance = {\r\n    theme: props.themeMode == \"dark\" ? \"night\" : \"stripe\",\r\n  };\r\n  const options = {\r\n    clientSecret,\r\n    appearance,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* {Isloading == true ? (\r\n        <Loading />\r\n      ) : (\r\n        <div className=\"subscibe-page pricing-container\">\r\n          <div className=\"subscibe-s\">\r\n            <div\r\n              className=\"pricing-plan-heading\"\r\n              style={{ marginBottom: \"clamp(15px,1vw,1vw)\" }}\r\n            >\r\n              Selected Subscription Is.\r\n            </div>\r\n            <div className=\"subscibe-plan\">\r\n              <Plan Btn={false} />\r\n            </div>\r\n          </div>\r\n          <div className=\"subscibe-e\">\r\n            <Elements options={options} stripe={stripePromise}>\r\n              <CheckoutForm />\r\n            </Elements>\r\n          </div>\r\n        </div>\r\n      )} */}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AACA,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACvC,MAAMC,aAAa,GAAGT,UAAU,CAC9B,6GAA6G,CAC9G;AACD,eAAe,SAASU,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACdkB,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMC,KAAK,GAAG;MAAEC,KAAK,EAAE;IAAI,CAAC;IAG1BC,KAAK,CAAC,iDAAiD,EAAE;MACvDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,KAAK;IAC5B,CAAC,CAAC,CACCQ,IAAI,CAAEC,GAAG,IAAK;MACb,OAAOA,GAAG,CAACC,IAAI,EAAE;IACnB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACdA,IAAI,IAAId,eAAe,CAACc,IAAI,CAACf,YAAY,CAAC;IAC5C,CAAC,CAAC,CACHgB,KAAK,CAAGC,KAAK,IAAG;MACfC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;IACF;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,UAAU,GAAG;IACjBC,KAAK,EAAEvB,KAAK,CAACwB,SAAS,IAAI,MAAM,GAAG,OAAO,GAAG;EAC/C,CAAC;EACD,MAAMC,OAAO,GAAG;IACdvB,YAAY;IACZoB;EACF,CAAC;EAED,oBACEzB,OAAA,CAAAF,SAAA,oBAuBG;AAEP;AAACM,EAAA,CA5DuBF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}