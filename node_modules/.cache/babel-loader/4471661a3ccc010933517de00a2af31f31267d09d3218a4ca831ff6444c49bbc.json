{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JC\\\\Documents\\\\WebDevelopment\\\\CMS\\\\src\\\\Components\\\\PaymentGatway\\\\CheckoutForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../../Css/stripe.css\";\n// import \"../../Css/style.css\"\nimport { useNavigate } from \"react-router-dom\";\nimport { PaymentElement, LinkAuthenticationElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CheckoutForm(props) {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const Navigate = useNavigate();\n  useEffect(() => {\n    if (!stripe) {\n      return;\n    }\n    const clientSecret = new URLSearchParams(window.location.search).get(\"payment_intent_client_secret\");\n    if (!clientSecret) {\n      return;\n    }\n    function updatePaymentStatus() {\n      localStorage.setItem(\"status\", \"pro\");\n      fetch(`http://localhost:8000/api/update-plan`, {\n        method: \"post\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(Response => {\n        return Response.json();\n      }).then(Data => {\n        props.ShowToast(\"fa-xmark-circle igreen\", \"Plan Successfully Purchase \", \"Congratulations for purchasing our exculsive premium develpoment resources plan. \");\n        Navigate(\"/browse\", {\n          replace: true\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n    stripe.retrievePaymentIntent(clientSecret).then(_ref => {\n      let {\n        paymentIntent\n      } = _ref;\n      switch (paymentIntent.status) {\n        case \"succeeded\":\n          updatePaymentStatus();\n          setMessage(\"Payment succeeded!\");\n          break;\n        case \"processing\":\n          setMessage(\"Your payment is processing.\");\n          break;\n        case \"requires_payment_method\":\n          setMessage(\"Your payment was not successful, please try again.\");\n          break;\n        default:\n          setMessage(\"Something went wrong.\");\n          break;\n      }\n    });\n  }, [stripe]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    setIsLoading(true);\n    const {\n      error\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        return_url: \"http://localhost:3000/subscribe\"\n      }\n    });\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n    }\n    setIsLoading(false);\n  };\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(PaymentElement, {\n      id: \"payment-element\",\n      options: paymentElementOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"payment-btn\",\n      disabled: isLoading || !stripe || !elements,\n      id: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"button-text\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\",\n          id: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 24\n        }, this) : \"Pay now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"payment-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckoutForm, \"nWvYwXt1ddFmajcgfPkCGsM0EXA=\", false, function () {\n  return [useStripe, useElements, useNavigate];\n});\n_c = CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","PaymentElement","LinkAuthenticationElement","useStripe","useElements","jsxDEV","_jsxDEV","CheckoutForm","props","_s","stripe","elements","message","setMessage","isLoading","setIsLoading","Navigate","clientSecret","URLSearchParams","window","location","search","get","updatePaymentStatus","localStorage","setItem","fetch","method","headers","Authorization","getItem","then","Response","json","Data","ShowToast","replace","catch","e","console","log","retrievePaymentIntent","_ref","paymentIntent","status","handleSubmit","preventDefault","error","confirmPayment","confirmParams","return_url","type","paymentElementOptions","layout","id","onSubmit","children","options","fileName","_jsxFileName","lineNumber","columnNumber","className","disabled","_c","$RefreshReg$"],"sources":["C:/Users/JC/Documents/WebDevelopment/CMS/src/Components/PaymentGatway/CheckoutForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../../Css/stripe.css\";\r\n// import \"../../Css/style.css\"\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport {\r\n  PaymentElement,\r\n  LinkAuthenticationElement,\r\n  useStripe,\r\n  useElements,\r\n} from \"@stripe/react-stripe-js\";\r\n\r\nexport default function CheckoutForm(props) {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [message, setMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const Navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (!stripe) {\r\n      return;\r\n    }\r\n\r\n    const clientSecret = new URLSearchParams(window.location.search).get(\r\n      \"payment_intent_client_secret\"\r\n    );\r\n\r\n    if (!clientSecret) {\r\n      return;\r\n    }\r\n    function updatePaymentStatus() {\r\n      localStorage.setItem(\"status\", \"pro\");\r\n      fetch(`http://localhost:8000/api/update-plan`, {\r\n        method: \"post\",\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((Response) => {\r\n          return Response.json();\r\n        })\r\n        .then((Data) => {\r\n          props.ShowToast(\r\n            \"fa-xmark-circle igreen\",\r\n            \"Plan Successfully Purchase \",\r\n            \"Congratulations for purchasing our exculsive premium develpoment resources plan. \"\r\n          );\r\n          Navigate(\"/browse\", { replace: true });\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    }\r\n    stripe.retrievePaymentIntent(clientSecret).then(({ paymentIntent }) => {\r\n      switch (paymentIntent.status) {\r\n        case \"succeeded\":\r\n          updatePaymentStatus();\r\n          setMessage(\"Payment succeeded!\");\r\n          break;\r\n        case \"processing\":\r\n          setMessage(\"Your payment is processing.\");\r\n          break;\r\n        case \"requires_payment_method\":\r\n          setMessage(\"Your payment was not successful, please try again.\");\r\n          break;\r\n        default:\r\n          setMessage(\"Something went wrong.\");\r\n          break;\r\n      }\r\n    });\r\n  }, [stripe]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    const { error } = await stripe.confirmPayment({\r\n      elements,\r\n      confirmParams: {\r\n        return_url: \"http://localhost:3000/subscribe\",\r\n      },\r\n    });\r\n\r\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\r\n      setMessage(error.message);\r\n    } else {\r\n      setMessage(\"An unexpected error occurred.\");\r\n    }\r\n\r\n    setIsLoading(false);  \r\n  };\r\n\r\n  const paymentElementOptions = {\r\n    layout: \"tabs\",\r\n  };\r\n\r\n  return (\r\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\r\n      <PaymentElement id=\"payment-element\" options={paymentElementOptions} />\r\n      <button\r\n        className=\"payment-btn\"\r\n        disabled={isLoading || !stripe || !elements}\r\n        id=\"submit\"\r\n      >\r\n        <span id=\"button-text\">\r\n          {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay now\"}\r\n        </span>\r\n      </button>\r\n      {/* Show any error or success messages */}\r\n      {message && <div id=\"payment-message\">{message}</div>}\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}